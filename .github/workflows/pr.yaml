name: Verathread Web SDK

#/////////////////////////////////////////////////////////////////////////////////////////////////////////
# VERATHREAD FRONT END SDK
#/////////////////////////////////////////////////////////////////////////////////////////////////////////

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  AWS_REGION: eu-west-2
  FORCE_COLOR: 1
  DRY_RUN: false
  DEPLOY: true
  RUNNER_ALLOW_RUNASROOT: "1"

jobs:
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////
  # DEV
  # Flags used in other steps
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////

  test:
    runs-on: ubuntu-latest
    name: "Test"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

  publish-qa-docs:
    runs-on: custom-ubuntu-20.04-4core
    name: "Build & Publish QA Docs"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Configure Environment"
        uses: ./.github/actions/configuration
        id: configure
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws-region: ${{ env.AWS_REGION }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          use-sudo: true
      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 'v22.4.0'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
        env:
          FORCE_COLOR: 0
      - name: "Install Helm"
        uses: azure/setup-helm@v4.2.0
      - name: "Install Kubectl"
        uses: azure/setup-kubectl@v4
      - name: "GHCR Login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Set Kube Config"
        run: |
          mkdir -p ~/.kube && echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > ~/.kube/config
          chmod go-r ~/.kube/config
      - name: "Install"
        run: yarn install --prefer-offline --frozen-lockfile --non-interactive
      - name: "Build SCSS"
        run: yarn build:sass
      - name: "Build Docs"
        run: yarn docs
      - name: "Build Image"
        run: docker build --push -t ghcr.io/azarc-io/verathread-next-web-sdk/docs:${{ steps.configure.outputs.issue }} -f site/deployment/Dockerfile .
      - name: "Change Issue Case"
        id: issue
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ steps.configure.outputs.issue }}
      - name: "Create Docker Login Secret"
        run: |
          kubectl create namespace vth-sdk-docs --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret docker-registry ghcr-login-secret \
            --docker-server="https://ghcr.io" \
            --docker-username="waeljammal" \
            --docker-password="${{ secrets.GHCR_DOCKER_TOKEN }}" \
            --docker-email="wael.jammal@azarc.io" \
            --namespace=vth-sdk-docs \
            --dry-run=client -o yaml | kubectl apply -f -
      - name: "Deploy Chart"
        run: |
          helm upgrade ${{ steps.issue.outputs.lowercase }}-sdk site/deployment/chart \
            --install --wait --atomic --create-namespace --timeout=2m \
            --namespace=vth-sdk-docs \
            --values=site/deployment/chart/values.yaml \
            --set image.tag=${{ steps.configure.outputs.issue }} \
            --set ingress.hosts[0].host=${{ steps.issue.outputs.lowercase }}.sdk.verathread.dev
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: sdk-site
          path: _site
      - name: "Upload Artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: sdk-package
          path: dist

  release:
    runs-on: ubuntu-latest
    name: "Release"
    needs:
      - test
      - publish-qa-docs
    environment: production
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha }}
      - name: "Configure Environment"
        uses: ./.github/actions/configuration
        id: configure
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws-region: ${{ env.AWS_REGION }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          use-sudo: true
      - name: "Install Helm"
        uses: azure/setup-helm@v4.2.0
      - name: "Install Kubectl"
        uses: azure/setup-kubectl@v4
      - name: "GHCR Login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT_TOKEN }}
      - name: "Set Kube Config"
        run: |
          mkdir -p ~/.kube && echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > ~/.kube/config
          chmod go-r ~/.kube/config
      - name: "Fix Git"
        run: |
          git config --global url."https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global user.email "ci@azarc.io"
          git config --global user.name "CI"
      - name: "Change Issue Case"
        id: issue
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ steps.configure.outputs.issue }}
      - name: "Create Release Tag"
        uses: anothrNick/github-tag-action@1.67.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: minor
          INITIAL_VERSION: 1.0.0
          PRERELEASE: false
          DRY_RUN: true
      - name: "Update from Main Branch"
        shell: bash
        run: |
          echo 'Ensure PR Branch is not behind main. This should never happen but "actions/checkout@v4" plugin does this by default.'
          git merge origin/${{github.event.pull_request.base.ref}}
      - name: "Docker Re-Tag"
        run: |
          docker pull ghcr.io/azarc-io/verathread-next-web-sdk/docs:${{ steps.configure.outputs.issue }}
          docker tag ghcr.io/azarc-io/verathread-next-web-sdk/docs:${{ steps.configure.outputs.issue }} ghcr.io/azarc-io/verathread-next-web-sdk/docs:${{ steps.tag.outputs.tag }}
          docker push ghcr.io/azarc-io/verathread-next-web-sdk/docs:${{ steps.tag.outputs.tag }}
      - name: "Update Version Files"
        shell: bash
        run: |
          yq --version
          yq -i '.image.tag = "${{ steps.tag.outputs.tag }}"' 'site/deployment/chart/values.yaml'
          yq -i '.ingress.hosts[0].host = "sdk.verathread.dev"' 'site/deployment/chart/values.yaml'
      - name: "Deploy Chart"
        run: |
          helm upgrade release-sdk site/deployment/chart \
            --install --wait --atomic --create-namespace --timeout=2m \
            --namespace=vth-sdk-docs \
            --values=site/deployment/chart/values.yaml
      - name: "Undeploy QA Chart"
        run: helm uninstall ${{ steps.issue.outputs.lowercase }}-sdk --namespace=vth-sdk-docs --ignore-not-found
      - name: "Push Git Tag"
        run: git tag ${{ steps.tag.outputs.tag }}-chart && git push origin tag ${{ steps.tag.outputs.tag }}-chart
      - name: "Download Docs Artifact"
        uses: actions/download-artifact@v4
      - name: "Generate Packages"
        run: |
          mkdir -p bin
          zip -r bin/site.zip sdk-site
          zip -r bin/package.zip sdk-package
      - name: "Merge Pull Request"
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          method: squash
          repo: azarc-io/verathread-next-web-sdk
      - name: "Push Git Tag - After Squash"
        run: |
          git fetch origin
          git checkout origin/${{github.event.pull_request.base.ref}}
          git tag ${{ steps.tag.outputs.tag }}
          git push origin tag ${{ steps.tag.outputs.tag }}
      - name: "Create Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          generate_release_notes: true
          repository: azarc-io/verathread-next-web-sdk
          token: ${{ secrets.PAT_TOKEN }}
          files: |
            bin/site.zip
            bin/package.zip

#      - name: "Publish"
#        if: env.DRY_RUN == 'false'
#        run: |
#          cp ../../.npmrc .npmrc
#          yarn version --no-commit-hooks --no-git-tag-version --new-version ${{ needs.flags.outputs.version }}
#          yarn publish

  cleanup:
    runs-on: ubuntu-latest
    name: "Clean Up"
    needs:
      - release
    steps:
      - name: "Clean Up FE Packages"
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          tags: ${{ steps.configure.outputs.issue }}
          exclude-tags: 'v*,latest'
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: azarc-io
          package: verathread-next-web-sdk/docs
          log-level: debug
