name: Verathread Web SDK

#/////////////////////////////////////////////////////////////////////////////////////////////////////////
# VERATHREAD FRONT END SDK
#/////////////////////////////////////////////////////////////////////////////////////////////////////////

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  AWS_REGION: eu-west-2
  FORCE_COLOR: 1
  DRY_RUN: false
  DEPLOY: true
  RUNNER_ALLOW_RUNASROOT: "1"

jobs:
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////
  # DEV
  # Flags used in other steps
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////

  test:
    runs-on: ubuntu-latest
    name: "Test & Build SDK"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

  publish-demo-docs:
    runs-on: custom-ubuntu-20.04-4core
    name: "Test & Build SDK"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Configure Environment"
        uses: ./.github/actions/configuration
        id: configure
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws-region: ${{ env.AWS_REGION }}
          use-sudo: true
      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 'v22.4.0'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
        env:
          FORCE_COLOR: 0
      - name: "Install"
        if: env.DRY_RUN == 'false'
        run: yarn install --prefer-offline --frozen-lockfile --non-interactive
      - name: "Build SCSS"
        run: yarn build:sass
      - name: "Build Docs"
        run: yarn docs-build
      - uses: osiegmar/s3-publisher-action@v1
        with:
          bucket: vth-sdk-docs
          dir: ./_site
#      - name: "Publish"
#        if: env.DRY_RUN == 'false'
#        run: |
#          cp ../../.npmrc .npmrc
#          yarn version --no-commit-hooks --no-git-tag-version --new-version ${{ needs.flags.outputs.version }}
#          yarn publish
