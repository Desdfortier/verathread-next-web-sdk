name: Verathread Standalone Releaser

#/////////////////////////////////////////////////////////////////////////////////////////////////////////
# VERATHREAD FRONT END SDK
#/////////////////////////////////////////////////////////////////////////////////////////////////////////

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
  REGISTRY_PASS: ${{ secrets.REGISTRY_PASS }}
  GITLAB_DEPLOYMENT_KEY: ${{ secrets.GITLAB_DEPLOYMENT_KEY }}
  GITLAB_DEPLOYMENT_USER: ${{ secrets.GITLAB_DEPLOYMENT_USER }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_ACCESS_KEY_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-2
  FORCE_COLOR: 1
  DRY_RUN: false
  DEPLOY: true
  RUNNER_ALLOW_RUNASROOT: "1"

jobs:
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////
  # FLAGS
  # Flags used in other steps
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////

  flags:
    name: Set Flags
    runs-on: ubuntu-latest
    outputs:
      head-commit-message: ${{ steps.set-outputs.outputs.headCommitMsg }}
      version: ${{ steps.set-outputs.outputs.version }}
      issue: ${{ steps.set-outputs.outputs.issue }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: '0'
      - name: "Configure Environment (docker auth and aws auth)"
        uses: ./.github/actions/configuration
        id: configure
        with:
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          use-sudo: true
      - name: "Bump version and push tags"
        uses: anothrNick/github-tag-action@1.67.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0
          PRERELEASE: true
          PRERELEASE_SUFFIX: beta
          DRY_RUN: false
      - name: Find & Replace
        id: version
        uses: azarc-io/regex-property-action@master
        with:
          value: ${{ steps.tag.outputs.tag }}
          regex: '\.[^.]*$'
          replacement: ".${{github.run_number}}"
      - name: Set Outputs
        id: set-outputs
        run: |
          echo "headCommitMsg=$(git show -s --format=%s)" >> "$GITHUB_OUTPUT"
          echo "version=${{ steps.version.outputs.value }}" >> "$GITHUB_OUTPUT"
          echo "issue=${{ steps.configure.outputs.issue }}" >> "$GITHUB_OUTPUT"

      - name: "Update Summary"
        shell: bash
        id: summary
        run: |
          echo "Package Version: ${{ steps.version.outputs.value }}" >> $GITHUB_STEP_SUMMARY
          echo "Ticket: ${{ steps.configure.outputs.issue }}" >> $GITHUB_STEP_SUMMARY

  #/////////////////////////////////////////////////////////////////////////////////////////////////////////
  # BUILD SDK PROJECTS
  # This will build and publish
  #/////////////////////////////////////////////////////////////////////////////////////////////////////////

  build-web-sdk:
    runs-on: custom-ubuntu-20.04-4core
    name: "Test & Build Web SDK"
    needs: [flags]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: "Configure Environment"
        uses: ./.github/actions/configuration
        id: configure
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-region-codeartifact: ${{ env.AWS_REGION }}
          npmrc-output-path: ${{ env.BASE_DIR }}
          use-sudo: true
      - name: "Setup Node"
        uses: actions/setup-node@v4
        with:
          node-version: 'v20.9.0'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'
        env:
          FORCE_COLOR: 0
      - name: "Install"
        if: env.DRY_RUN == 'false'
        run: yarn install --prefer-offline --frozen-lockfile --non-interactive
      - name: "Build"
        run: yarn build
      - name: "Publish"
        if: env.DRY_RUN == 'false'
        working-directory: dist/sdk
        run: |
          cp ../../.npmrc .npmrc
          yarn version --no-commit-hooks --no-git-tag-version --new-version ${{ needs.flags.outputs.version }}
          yarn publish
